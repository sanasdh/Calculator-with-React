{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","handleClick","e","preventDefault","target","className","val","innerHTML","setState","value1","state","readout","console","log","value","length","handleOperand","newValue1","parseFloat","join","operation","id","handleSubmit","parseInt","push","result","i","opLength","handleClear","first","this","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a7dd5281.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      value:[],\r\n      value1:[],\r\n      result: 0,\r\n      readout:0,\r\n      first:false,\r\n      operation: [],\r\n    }\r\n  }\r\n  handleClick=(e)=>{\r\n    e.preventDefault()\r\nif(e.target.className ===\"number\"){\r\n  let val= e.target.innerHTML\r\n  this.setState({\r\n    value1:[...this.state.value1, val],\r\n    readout: [...this.state.value1, val],\r\n  })\r\n}\r\nconsole.log(\"value\");\r\nconsole.log(this.state.value);\r\nconsole.log(\"this.state.value.length\");\r\nconsole.log(this.state.value.length);\r\n\r\n  }\r\n\r\n  handleOperand=(e)=>{\r\n    e.preventDefault()\r\n    console.log(\"value\");\r\n    console.log(this.state.value);\r\n    let count=0\r\n    if(e.target.className=== \"operation\"){\r\n      let newValue1 = parseFloat(this.state.value1.join(''));\r\n      console.log({newValue1});\r\n      this.setState({\r\n        value: [...this.state.value, newValue1],\r\n        value1:[],\r\n        readout:0,\r\n        operation: [...this.state.operation, e.target.id],\r\n      })\r\n      }\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n      e.preventDefault()\r\n      let newValue1 = parseInt(this.state.value1.join(''))\r\n      console.log({newValue1});\r\n      let value= [...this.state.value]\r\n      value.push(newValue1)\r\n      let result =this.state.value[0];\r\n      console.log({value});\r\n      for(let i=0; i<value.length-1;i++){            \r\n        if (this.state.operation[i] == \"add\") {\r\n          result=result+value[i+1]       \r\n          }\r\n\r\n        if (this.state.operation[i] == \"subtract\") {\r\n          result=result-value[i+1]       \r\n          }\r\n        if (this.state.operation[i] == \"multiply\") {\r\n          result=result*value[i+1]       \r\n          }\r\n        if (this.state.operation[i] == \"divide\") {\r\n          result=result/value[i+1]       \r\n          }\r\n        if (this.state.operation[i] == \"mud\") {\r\n          result=result%value[i+1]       \r\n          }\r\n          console.log({result});\r\n      }\r\n      console.log({result});\r\n      let opLength=this.state.operation.length\r\n      console.log({opLength});\r\n        console.log({result});\r\n\r\n      this.setState({\r\n        readout: result\r\n      })\r\n    }\r\n    handleClear=(e)=>{\r\n      e.preventDefault()\r\n      this.setState({\r\n        value:[],\r\n        value1:[],\r\n        result: 0,\r\n        readout:0,\r\n        first:false,\r\n        operation: [],\r\n      })\r\n    }\r\n  render(){\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\"> \r\n     <h1> My React Calculator </h1>\r\n      </header>\r\n      <div className=\"outerBox\">\r\n        <div className=\"outPut\">\r\n{this.state.readout}\r\n        </div>\r\n\r\n        <div className=\"input\">\r\n          <div className=\"numbers\">\r\n            <div className=\"number\" id=\"seven\" onClick={this.handleClick}>7</div>\r\n            <div className=\"number\" id=\"8\" onClick={this.handleClick}>8</div>\r\n            <div className=\"number\" id=\"9\" onClick={this.handleClick}>9</div>\r\n            <div className=\"number\" id=\"4\" onClick={this.handleClick}>4</div>\r\n            <div className=\"number\" id=\"5\" onClick={this.handleClick}>5</div>\r\n            <div className=\"number\" id=\"6\" onClick={this.handleClick}>6</div>\r\n            <div className=\"number\" id=\"1\" onClick={this.handleClick}>1</div>\r\n            <div className=\"number\" id=\"2\" onClick={this.handleClick}>2</div>\r\n            <div className=\"number\" id=\"3\" onClick={this.handleClick}>3</div>\r\n            <div className=\"number\" id=\"0\" onClick={this.handleClick}>0</div>\r\n            <div className=\"number\" id=\"00\" onClick={this.handleClick}>00</div>\r\n            <div className=\"number\" id=\"dot\" onClick={this.handleClick}>.</div>\r\n          </div>\r\n\r\n          <div className=\"operations\">\r\n          <div className=\"operation\" id=\"divide\" onClick={this.handleOperand}>รท</div>\r\n          <div className=\"operation\" id=\"mud\" onClick={this.handleOperand}>%</div>\r\n          <div className=\"operation\" id=\"multiply\" onClick={this.handleOperand}>x</div>\r\n          <div className=\"operation\" id=\"subtract\" onClick={this.handleOperand}>-</div>\r\n          <div className=\"operation\" id=\"add\" onClick={this.handleOperand}>+</div>\r\n          <div className=\"operation\" id=\"clear\" onClick={this.handleClear}>Clear</div>\r\n          <div className=\"operation\" id=\"equ\" onClick={this.handleSubmit}>=</div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}